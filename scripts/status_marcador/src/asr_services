#!/bin/bash
### BEGIN INIT INFO
# Provides:             asrall_services
# Required-Start:    $network $syslog $named $local_fs $remote_fs
# Required-Stop:     $network $syslog $named $local_fs $remote_fs
# Should-Start:      dahdi misdn lcr wanrouter mysql postgresql
# Should-Stop:       dahdi misdn lcr wanrouter mysql postgresql
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    asrall_services
# Description:          asrall_services
### END INIT INFO
#
# Script de Gestion de Los Servicios ASR 
# Creado por Infraestructura TI | Noviembre 2015
#
# 
# Credits: 
# Created by Jonathan Melendez el 04/11/2015
#
# Start and Stop asrall_services

PATH=$PATH:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin

#Declarando Funciones y Variables

start()
	{
	STATUS=`ps aux | grep status_process.sh | grep -v grep | wc -l`
	if [ $STATUS -eq 1 ]
		then
			mypid=`ps -ef | grep status_process.sh | grep -v grep | awk '{print $2}'`
			echo "Heeey! Daemon Status Process for ASR Server Already Running in PID: $mypid"
			exit 1
		else
			echo "Starting Services... wait"
			nohup /usr/local/bin/status_process.sh </dev/null &>/dev/null &
			sleep 5
			mypid=`ps -ef | grep status_process.sh | grep -v grep | awk '{print $2}'`
			echo "Daemon Status Process for ASR Server Inicialized in PID: $mypid "
	fi
	}

stop()
	{
	for i in `ps aux | grep status_process.sh | grep -v grep | awk '{print $2}'`; do kill -9  $i; done
	TEMP=`ps aux | grep status_process.sh | grep -v grep | wc -l`
	if [ $TEMP -eq 0 ]
		then
			echo "Daemon Status Process for ASR Server Stopped"
		else
			echo "ERROR: The Daemon Status Process for ASR Server was not stopped"
	fi
	}
status()
	{
	STATUS=`ps aux | grep status_process.sh | grep -v grep | wc -l`
	if [ $STATUS -eq 1 ]
		then
			mypid=`ps -ef | grep status_process.sh | grep -v grep | awk '{print $2}'`
			echo "Daemon Status Process for ASR Server Running in PID: $mypid"
		else
			echo "Daemon Status Process for ASR Server Not Running"
		fi
	}

case $1 in
	start)
	start
	;;
	stop)
	stop
	;;
	status)
	status
	;;
	*)
	echo "Heey!! Usage: $0 start|stop|status"
	exit 1
	;;
esac

