Laboratorio de Prueba de Plataforma COCKPIT

S.O Centos 7  Arquitectura 64
Paqueteria Actualizada corriendo yum update -y 

Instalamos Cockpit
yum install cockpit

Habilitamos con el arranque del S.O
sudo systemctl enable --now cockpit.socket

En dado caso si nuestra Instancia utiliza el Firewall de Linux 
sudo firewall-cmd --permanent --zone=public --add-service=cockpit
sudo firewall-cmd --reload

Finalmente nos Logeamos al servidor y el puerto 9090 con el usuario y clave que administra el servidor


S.O Debian 8  Arquitectura 64




    Add the following line to /etc/apt/sources.list. Replace the distribution name as appropriate.

    deb http://repo-cockpitproject.rhcloud.com/debian/ jessie main

    Import Cockpit's signing key to the apt sources keyring:

    sudo apt-key adv --keyserver sks-keyservers.net --recv-keys F1BAA57C

    Update package information with that source:

    sudo apt-get update

    Install cockpit:

    sudo apt-get install cockpit

    Start and enable cockpit:

    sudo systemctl enable cockpit.socket
    sudo systemctl start cockpit.socket


create database openfiredb default character set utf8;
GRANT ALL PRIVILEGES ON openfiredb.* TO 'chatuser'@'%' IDENTIFIED BY 'd4ng3r08s' WITH GRANT OPTION;
FLUSH PRIVILEGES;
exit;




apt-get install perl libnet-ssleay-perl openssl libauthen-pam-perl libpam-runtime libio-pty-perl apt-show-versions python webmin dependencias
wget http://prdownloads.sourceforge.net/webadmin/webmin_1.831_all.deb llave de descarga
dpkg --install webmin_1.831_all.deb instalacion



nova boot --nic port-id=10ba215a-853d-4d25-983f-88138f54c1fc --flavor TEL-M3-EXTRA-HUGE --availability-zone produccion --image Debian-7-64-Cloud --key-name=openstack-infra IVR-GYSMO-AT-01

IP del Servidor: 172.16.31.74 
Nombre del usuario: telefonia
Grupo Seleccionado: telefonia
Contraseña: 91b7d040a78c02796a39


GRANT ALL PRIVILEGES ON gysmol.* TO 'migrateusers'@'%' IDENTIFIED BY 'd4ng3r08s' WITH GRANT OPTION;

neutron port-show 10ba215a-853d-4d25-983f-88138f54c1fc
neutron port-update --port_security_enabled=false 10ba215a-853d-4d25-983f-88138f54c1fc

En un servidor en producción con bastante carga puede ocurrir errores tipo "Too many open files" o algo parecido. Se debe a que en Linux se pueden establecer limites de ficheros abiertos simultaneamente y ésta limitación es por usuario. Para solucionarlo hay que cambiar la configuración en varios sitios, pero primero hay que comprobar la configuración actual:

    # ulimit -n

esto nos indicará la cantidad máxima por usuario y sessión. El valor por defecto es 1024, lo que no es suficiente para Apache y Tomcat, ya que trabajan con muchos ficheros temporales y los necesita mantener abiertos por questiones de rendimiento. Para cambiar este valor:

    #ulimit -n 75000

Este comando aplicará el cámbio en terminos de la sesión actual. Para hacerlo persistente tenemos que editar los limites a nivel de configuración del sistema:

     

    # vi /etc/security/limits.conf

    root       soft    nofile   10000
    root       hard    nofile   30000
    *          soft    nofile   100000
    *          hard    nofile   300000

El patrón "*" se refiere a todos los usuarios , también se puede definir para cada uno por separado. Una pregunta lógica que surge aqui es ¿Y por qué hay que poner los valores separados para el root?  Pues ni idea. Pero, al menos en CentOS 5.4, si no se ponen los parametros del root por separado - no funciona correctamente. Luego, aparte de limites por usuario y sesión, existen limites a nivel del todo SO. Para ajustarlos hay que hacer lo siguiente:

    # vi /etc/sysctl.conf
    fs.file-max = 100000

Guardar el cambio y 

    # sysctl -p

Comprobar que la configuración tuvo efecto:

    # sysctl fs.file-max

 Para asegurarse de que todos los cambios se aplicaron correctamente, recomiendo hacer el logout de la sesión, volver a entrar y ejecutar las comprobaciones de ulimit y sysctl.  

